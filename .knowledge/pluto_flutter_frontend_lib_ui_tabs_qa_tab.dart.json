{"is_source_file": true, "format": "Dart", "description": "This file defines a Flutter widget for a QA tab that allows users to input a stock symbol and a question, then asynchronously retrieves an answer via a provider. It includes UI components, state management, and interaction with a provider for data fetching.", "external_files": ["package:flutter/material.dart", "package:provider/provider.dart", "../../providers/market_provider.dart"], "external_methods": ["Provider.read<MarketProvider>()", "market.askAI(sym, q)"], "published": ["QASessionArgs"], "classes": [{"name": "QATab", "description": "A Flutter stateful widget representing the QA tab interface."}, {"name": "_QATabState", "description": "State class for QATab handling the UI state and interactions."}, {"name": "QASessionArgs", "description": "A simple data class holding the stock symbol for a QA session."}], "methods": [{"name": "_ask", "description": "Asynchronous method that initiates a call to the provider to fetch an AI answer based on user input."}, {"name": "build", "description": "Build method constructing the widget tree for the QA tab UI."}, {"name": "dispose", "description": "Cleans up the text controllers when the widget is disposed."}], "calls": ["context.read<MarketProvider>()", "market.askAI(sym, q)"], "search-terms": ["Flutter QA tab", "MarketProvider integration", "AI stock Q&A", "TextEditingController", "StatefulWidget with async data fetch"], "state": 2, "file_id": 37, "knowledge_revision": 85, "git_revision": "", "hash": "faac96b2da45b15a7ee02b374b73a4f5", "format-version": 4, "code-base-name": "pluto_flutter_frontend", "filename": "pluto_flutter_frontend/lib/ui/tabs/qa_tab.dart", "revision_history": [{"85": ""}]}